using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace AccountingSystem.Models;

// حالات الفاتورة
public enum InvoiceStatus
{
    Draft = 1,
    Confirmed = 2,
    Posted = 3,
    Cancelled = 4
}

// أنواع حركة المخزون
public enum StockMovementType
{
    In = 1,
    Out = 2,
    Adjustment = 3
}

// كائن فاتورة البي    [Column(TypeName = "decimal(18,2)")]
    public decimal NetAmount { get; set; }

    public int? OriginalInvoiceDetailId { get; set; }
    
    [StringLength(200)]
    public string? ReturnReason { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(PurchaseReturnId))]
    public virtual PurchaseReturn? PurchaseReturn { get; set; }
}

// كائن فاتورة البيع
public class SalesInvoice
{
    [Key]
    public int SalesInvoiceId { get; set; }

    [Required, StringLength(20), Unicode(false)]
    public string InvoiceNumber { get; set; } = string.Empty;

    [Required]
    public int CustomerId { get; set; }

    [Required]
    public DateTime InvoiceDate { get; set; } = DateTime.Now;

    [Column(TypeName = "decimal(18,2)")]
    public decimal SubTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TaxAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal PaidAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal RemainingAmount { get; set; }

    [StringLength(500)]
    public string? Notes { get; set; }

    public InvoiceStatus Status { get; set; } = InvoiceStatus.Draft;

    public bool IsPosted { get; set; }

    public DateTime CreatedDate { get; set; } = DateTime.Now;

    public int CreatedBy { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(CustomerId))]
    public virtual Customer? Customer { get; set; }

    public virtual ICollection<SalesInvoiceDetail> SalesInvoiceDetails { get; set; } = new List<SalesInvoiceDetail>();
}

// تفاصيل فاتورة البيع
public class SalesInvoiceDetail
{
    [Key]
    public int SalesInvoiceDetailId { get; set; }

    [Required]
    public int SalesInvoiceId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal Quantity { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal UnitPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TotalPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetAmount { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(SalesInvoiceId))]
    public virtual SalesInvoice? SalesInvoice { get; set; }

    [ForeignKey(nameof(ProductId))]
    public virtual Product? Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual Unit? Unit { get; set; }
}

// كائن فاتورة الشراء
public class PurchaseInvoice
{
    [Key]
    public int PurchaseInvoiceId { get; set; }

    [Required, StringLength(20), Unicode(false)]
    public string InvoiceNumber { get; set; } = string.Empty;

    [Required]
    public int SupplierId { get; set; }

    [Required]
    public DateTime InvoiceDate { get; set; } = DateTime.Now;

    [Column(TypeName = "decimal(18,2)")]
    public decimal SubTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TaxAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal PaidAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal RemainingAmount { get; set; }

    [StringLength(500)]
    public string? Notes { get; set; }

    public InvoiceStatus Status { get; set; } = InvoiceStatus.Draft;

    public bool IsPosted { get; set; }

    public DateTime CreatedDate { get; set; } = DateTime.Now;

    public int CreatedBy { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(SupplierId))]
    public virtual Supplier? Supplier { get; set; }

    public virtual ICollection<PurchaseInvoiceDetail> PurchaseInvoiceDetails { get; set; } = new List<PurchaseInvoiceDetail>();
}

// تفاصيل فاتورة الشراء
public class PurchaseInvoiceDetail
{
    [Key]
    public int PurchaseInvoiceDetailId { get; set; }

    [Required]
    public int PurchaseInvoiceId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal Quantity { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal UnitPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TotalPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetAmount { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(PurchaseInvoiceId))]
    public virtual PurchaseInvoice? PurchaseInvoice { get; set; }

    [ForeignKey(nameof(ProductId))]
    public virtual Product? Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual Unit? Unit { get; set; }
}

// كائن مرتجع البيع
public class SalesReturn
{
    [Key]
    public int SalesReturnId { get; set; }

    [Required, StringLength(20), Unicode(false)]
    public string ReturnNumber { get; set; } = string.Empty;

    [Required]
    public int CustomerId { get; set; }

    public int? OriginalSalesInvoiceId { get; set; }

    [Required]
    public DateTime ReturnDate { get; set; } = DateTime.Now;

    [Column(TypeName = "decimal(18,2)")]
    public decimal SubTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TaxAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal RefundAmount { get; set; }

    [StringLength(500)]
    public string? Notes { get; set; }

    [StringLength(200)]
    public string? ReturnReason { get; set; }

    public InvoiceStatus Status { get; set; } = InvoiceStatus.Draft;

    public bool IsPosted { get; set; }

    public DateTime CreatedDate { get; set; } = DateTime.Now;

    public int CreatedBy { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(CustomerId))]
    public virtual Customer? Customer { get; set; }

    [ForeignKey(nameof(OriginalSalesInvoiceId))]
    public virtual SalesInvoice? OriginalSalesInvoice { get; set; }

    public virtual ICollection<SalesReturnDetail> SalesReturnDetails { get; set; } = new List<SalesReturnDetail>();
}

// تفاصيل مرتجع البيع
public class SalesReturnDetail
{
    [Key]
    public int SalesReturnDetailId { get; set; }

    [Required]
    public int SalesReturnId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal Quantity { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal UnitPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TotalPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetAmount { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(SalesReturnId))]
    public virtual SalesReturn? SalesReturn { get; set; }

    [ForeignKey(nameof(ProductId))]
    public virtual Product? Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual Unit? Unit { get; set; }
}

// كائن مرتجع الشراء
public class PurchaseReturn
{
    [Key]
    public int PurchaseReturnId { get; set; }

    [Required, StringLength(20), Unicode(false)]
    public string ReturnNumber { get; set; } = string.Empty;

    [Required]
    public int SupplierId { get; set; }

    public int? OriginalPurchaseInvoiceId { get; set; }

    [Required]
    public DateTime ReturnDate { get; set; } = DateTime.Now;

    [Column(TypeName = "decimal(18,2)")]
    public decimal SubTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TaxAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetTotal { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal RefundAmount { get; set; }

    [StringLength(500)]
    public string? Notes { get; set; }

    [StringLength(200)]
    public string? ReturnReason { get; set; }

    public InvoiceStatus Status { get; set; } = InvoiceStatus.Draft;

    public bool IsPosted { get; set; }

    public DateTime CreatedDate { get; set; } = DateTime.Now;

    public int CreatedBy { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(SupplierId))]
    public virtual Supplier? Supplier { get; set; }

    [ForeignKey(nameof(OriginalPurchaseInvoiceId))]
    public virtual PurchaseInvoice? OriginalPurchaseInvoice { get; set; }

    public virtual ICollection<PurchaseReturnDetail> PurchaseReturnDetails { get; set; } = new List<PurchaseReturnDetail>();
}

// تفاصيل مرتجع الشراء
public class PurchaseReturnDetail
{
    [Key]
    public int PurchaseReturnDetailId { get; set; }

    [Required]
    public int PurchaseReturnId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal Quantity { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal UnitPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal TotalPrice { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal DiscountAmount { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal NetAmount { get; set; }

    public int? OriginalInvoiceDetailId { get; set; }
    
    [StringLength(200)]
    public string? ReturnReason { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(PurchaseReturnId))]
    public virtual PurchaseReturn? PurchaseReturn { get; set; }

    [ForeignKey(nameof(ProductId))]
    public virtual Product? Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual Unit? Unit { get; set; }
}

// كائن حركات المخزون
public class StockMovement
{
    [Key]
    public int StockMovementId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public StockMovementType MovementType { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal Quantity { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,4)")]
    public decimal QuantityInMainUnit { get; set; }

    [StringLength(100), Unicode(false)]
    public string? ReferenceType { get; set; }

    public int? ReferenceId { get; set; }

    [StringLength(200)]
    public string? Notes { get; set; }

    public DateTime MovementDate { get; set; } = DateTime.Now;

    public int CreatedBy { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(ProductId))]
    public virtual required Product Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual required Unit Unit { get; set; }
}

// تاريخ الأسعار للعملاء
public class CustomerPriceHistory
{
    [Key]
    public int PriceHistoryId { get; set; }

    [Required]
    public int CustomerId { get; set; }

    [Required]
    public int ProductId { get; set; }

    [Required]
    public int UnitId { get; set; }

    [Column(TypeName = "decimal(18,2)")]
    public decimal LastSalePrice { get; set; }

    [Required]
    public DateTime LastSaleDate { get; set; } = DateTime.Now;

    public int LastInvoiceId { get; set; }

    [Timestamp]
    public byte[] RowVersion { get; set; } = default!;

    // العلاقات
    [ForeignKey(nameof(CustomerId))]
    public virtual Customer? Customer { get; set; }

    [ForeignKey(nameof(ProductId))]
    public virtual Product? Product { get; set; }

    [ForeignKey(nameof(UnitId))]
    public virtual Unit? Unit { get; set; }
}
