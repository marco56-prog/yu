<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!-- Control Styles - آمنة مع TargetType واضح وخصائص مرفقة صحيحة -->
  
  <!-- Text Styles -->
  <Style x:Key="Text.Body" TargetType="TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="FontFamily" Value="{StaticResource App.Font}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
    <Setter Property="TextWrapping" Value="Wrap"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
  </Style>
  
  <Style x:Key="Text.Header" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Large}"/>
    <Setter Property="FontWeight" Value="{StaticResource FontWeight.SemiBold}"/>
  </Style>
  
  <Style x:Key="Text.Caption" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Small}"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextSecondary}"/>
  </Style>
  
  <!-- Button Styles -->
  <Style x:Key="Btn.Primary" TargetType="Button">
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextOnPrimary}"/>
    <Setter Property="Background" Value="{DynamicResource Brush.Primary}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="Padding" Value="{StaticResource Space.ML}"/>
    <Setter Property="FontFamily" Value="{StaticResource App.Font}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="{TemplateBinding Background}" 
                  CornerRadius="{StaticResource Radius.M}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter HorizontalAlignment="Center" 
                              VerticalAlignment="Center"
                              Margin="{TemplateBinding Padding}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Opacity" Value="0.9"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="Btn.Secondary" TargetType="Button" BasedOn="{StaticResource Btn.Primary}">
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
  </Style>
  
  <Style x:Key="Btn.Danger" TargetType="Button" BasedOn="{StaticResource Btn.Primary}">
    <Setter Property="Background" Value="{DynamicResource Brush.Danger}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Danger}"/>
  </Style>
  
  <!-- Input Styles -->
  <Style x:Key="Input.TextBox" TargetType="TextBox">
    <Setter Property="Background" Value="{DynamicResource Brush.InputBackground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.InputBorder}"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
    <Setter Property="FontFamily" Value="{StaticResource App.Font}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{StaticResource Radius.S}">
            <ScrollViewer x:Name="PART_ContentHost" 
                          Margin="{TemplateBinding Padding}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter Property="BorderBrush" Value="{DynamicResource Brush.InputFocus}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="Input.ComboBox" TargetType="ComboBox">
    <Setter Property="Background" Value="{DynamicResource Brush.InputBackground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.InputBorder}"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
    <Setter Property="FontFamily" Value="{StaticResource App.Font}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSize.Normal}"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
  </Style>
  
  <!-- Card Style -->
  <Style x:Key="Card.Container" TargetType="Border">
    <Setter Property="Background" Value="{DynamicResource Brush.Card}"/>
    <Setter Property="CornerRadius" Value="{StaticResource Radius.M}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="Padding" Value="{StaticResource Space.L}"/>
    <Setter Property="Effect">
      <Setter.Value>
        <DropShadowEffect Color="#20000000" 
                          ShadowDepth="{StaticResource Shadow.Depth.S}" 
                          BlurRadius="8" 
                          Opacity="0.1"/>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- List Styles with Attached Properties -->
  <Style TargetType="ListView">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
  </Style>
  
  <Style TargetType="DataGrid">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="RowBackground" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="AlternatingRowBackground" Value="{DynamicResource Brush.Background}"/>
    <Setter Property="GridLinesVisibility" Value="Horizontal"/>
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource Brush.Border}"/>
  </Style>
  
  <!-- ScrollViewer Style -->
  <Style TargetType="ScrollViewer">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="0"/>
  </Style>
  
  <!-- Panel Styles -->
  <Style x:Key="Panel.Sidebar" TargetType="StackPanel">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="Margin" Value="{StaticResource Space.S}"/>
  </Style>

  <!-- MainWindow Specific Styles -->
  <Style x:Key="TitleBarLayout" TargetType="Border">
    <Setter Property="Background" Value="{DynamicResource Brush.Primary}"/>
    <Setter Property="Padding" Value="{StaticResource Space.L}"/>
  </Style>

  <Style x:Key="SidebarLayout" TargetType="Border">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="0,0,1,0"/>
  </Style>

  <Style x:Key="SearchBar" TargetType="Border">
    <Setter Property="Background" Value="{DynamicResource Brush.InputBackground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.InputBorder}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="CornerRadius" Value="{StaticResource Radius.S}"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
  </Style>

  <!-- Button Styles for MainWindow -->
  <Style x:Key="OutlinedButton" TargetType="Button" BasedOn="{StaticResource Btn.Secondary}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
  </Style>

  <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource Btn.Secondary}"/>

  <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource Btn.Primary}"/>

  <Style x:Key="SidebarButton" TargetType="Button">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="BorderBrush" Value="Transparent"/>
    <Setter Property="Foreground" Value="{DynamicResource Brush.TextPrimary}"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
    <Setter Property="HorizontalAlignment" Value="Stretch"/>
    <Setter Property="HorizontalContentAlignment" Value="Left"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Margin" Value="0,2"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{StaticResource Radius.S}"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource Brush.Background}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource Brush.Primary}"/>
              <Setter Property="Foreground" Value="{DynamicResource Brush.TextOnPrimary}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="QuickActionButton" TargetType="Button">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="Padding" Value="{StaticResource Space.L}"/>
    <Setter Property="Margin" Value="{StaticResource Space.S}"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{StaticResource Radius.M}"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource Brush.Primary}"/>
              <Setter Property="Foreground" Value="{DynamicResource Brush.TextOnPrimary}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Expander Style -->
  <Style x:Key="ModernExpander" TargetType="Expander">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
    <Setter Property="Margin" Value="0,2"/>
  </Style>

  <!-- TextBox Style -->
  <Style x:Key="ModernTextBox" TargetType="TextBox" BasedOn="{StaticResource Input.TextBox}"/>

  <!-- Additional Layout Styles -->
  <Style x:Key="Card" TargetType="Border" BasedOn="{StaticResource Card.Container}"/>

  <Style x:Key="NotificationItemStyle" TargetType="Border">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="{StaticResource Border.Thin}"/>
    <Setter Property="CornerRadius" Value="{StaticResource Radius.S}"/>
    <Setter Property="Padding" Value="{StaticResource Space.M}"/>
    <Setter Property="Margin" Value="{StaticResource Space.XS}"/>
  </Style>

  <!-- Text Styles with proper aliases -->
  <Style x:Key="BodyTextBlock" TargetType="TextBlock" BasedOn="{StaticResource Text.Body}"/>

</ResourceDictionary>