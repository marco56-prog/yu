<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <!-- ========================================================= -->
  <!--                  Classic Theme (Sharper UI)               -->
  <!--        Flat look, subtle borders, compact typography      -->
  <!--           Keys are aligned with Base.xaml contract        -->
  <!-- ========================================================= -->

  <!-- ========== Base Colors (from provided palette) ========== -->
  <Color x:Key="PrimaryColor">#1976D2</Color>
  <Color x:Key="BackgroundColor">#F0F0F0</Color>
  <Color x:Key="SurfaceColor">#FDFDFD</Color>
  <Color x:Key="BorderColor">#C8C8C8</Color>

  <Color x:Key="TextPrimaryColor">#212121</Color>
  <Color x:Key="TextSecondaryColor">#757575</Color>
  <Color x:Key="MutedColor">#BDBDBD</Color>

  <!-- States -->
  <Color x:Key="SuccessColor">#2E7D32</Color>
  <Color x:Key="DangerColor">#C62828</Color>
  <Color x:Key="WarningColor">#EF6C00</Color>
  <Color x:Key="InfoColor">#0288D1</Color>

  <!-- ========== Radii / Sizes (sharper) ========== -->
  <CornerRadius x:Key="RadiusS">2</CornerRadius>
  <CornerRadius x:Key="RadiusM">4</CornerRadius>
  <CornerRadius x:Key="RadiusL">6</CornerRadius>

  <!-- Typography (compact) -->
  <sys:Double x:Key="FontSizeXS">11</sys:Double>
  <sys:Double x:Key="FontSizeSmall">12</sys:Double>
  <sys:Double x:Key="FontSizeNormal">13</sys:Double>
  <sys:Double x:Key="FontSizeLarge">14</sys:Double>
  <sys:Double x:Key="FontSizeXL">16</sys:Double>
  <FontFamily x:Key="AppFont">Segoe UI</FontFamily>

  <!-- Spacing / Thickness -->
  <Thickness x:Key="BorderThin">1</Thickness>
  <Thickness x:Key="BorderThick">2</Thickness>
  <Thickness x:Key="PaddingS">6,4</Thickness>
  <Thickness x:Key="PaddingM">10,6</Thickness>

  <!-- ========== Brushes (derived) ========== -->
  <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
  <SolidColorBrush x:Key="BackgroundBrush" Color="{StaticResource BackgroundColor}"/>
  <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
  <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource BorderColor}"/>

  <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimaryColor}"/>
  <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}"/>
  <SolidColorBrush x:Key="MutedBrush" Color="{StaticResource MutedColor}"/>

  <SolidColorBrush x:Key="SuccessBrush" Color="{StaticResource SuccessColor}"/>
  <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>
  <SolidColorBrush x:Key="WarningBrush" Color="{StaticResource WarningColor}"/>
  <SolidColorBrush x:Key="InfoBrush" Color="{StaticResource InfoColor}"/>

  <!-- Focus Ring (classic outline) -->
  <Style x:Key="FocusRing" TargetType="Border">
    <Setter Property="BorderBrush" Value="#6688B4E6"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThick}"/>
    <Setter Property="CornerRadius" Value="{StaticResource RadiusM}"/>
  </Style>

  <!-- Global Text Defaults -->
  <Style TargetType="TextElement">
    <Setter Property="FontFamily" Value="{StaticResource AppFont}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
  </Style>

  <!-- ========== Window ========== -->
  <Style TargetType="Window">
    <Setter Property="FontFamily" Value="{StaticResource AppFont}"/>
    <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
    <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="UseLayoutRounding" Value="True"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
  </Style>

  <!-- ========== Card Helper ========== -->
  <Style x:Key="Card" TargetType="Border">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="CornerRadius" Value="{StaticResource RadiusL}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThin}"/>
    <Setter Property="Padding" Value="{StaticResource PaddingM}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
  </Style>

  <!-- ========== Buttons (flat classic) ========== -->
  <Style TargetType="Button">
    <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThin}"/>
    <Setter Property="Padding" Value="{StaticResource PaddingM}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <Border x:Name="root" CornerRadius="{StaticResource RadiusM}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"/>
            <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Border x:Name="focus" Visibility="Collapsed" Style="{StaticResource FocusRing}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="root" Property="Background" Value="#FFF9FAFB"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="root" Property="Background" Value="#FFF2F3F5"/>
              <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="focus" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.55"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Primary / Danger / Success Buttons -->
  <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
  </Style>

  <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource DangerBrush}"/>
  </Style>

  <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource SuccessBrush}"/>
  </Style>

  <!-- ========== Inputs ========== -->
  <Style TargetType="TextBox">
    <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThin}"/>
    <Setter Property="Padding" Value="{StaticResource PaddingS}"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Border x:Name="Bd" CornerRadius="{StaticResource RadiusS}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
              <Setter TargetName="Bd" Property="BorderThickness" Value="{StaticResource BorderThick}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.55"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="PasswordBox">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThin}"/>
    <Setter Property="Padding" Value="{StaticResource PaddingS}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="PasswordBox">
          <Border x:Name="Bd" CornerRadius="{StaticResource RadiusS}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}">
            <ScrollViewer x:Name="PART_ContentHost"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
              <Setter TargetName="Bd" Property="BorderThickness" Value="{StaticResource BorderThick}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.55"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ComboBox -->
  <Style TargetType="ComboBox">
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="{StaticResource BorderThin}"/>
    <Setter Property="Padding" Value="{StaticResource PaddingS}"/>
  </Style>

  <!-- CheckBox / RadioButton -->
  <Style TargetType="CheckBox">
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
  </Style>

  <Style TargetType="RadioButton">
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
  </Style>

  <!-- ========== Tabs / Menu / Status ========== -->
  <Style TargetType="TabControl">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="4"/>
  </Style>

  <Style TargetType="TabItem">
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="Padding" Value="10,6"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TabItem">
          <Border x:Name="Bd" CornerRadius="{StaticResource RadiusS}"
                  Background="Transparent"
                  BorderBrush="Transparent" BorderThickness="1" Padding="8,4" Margin="2,2,2,0">
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="#FFF7F7F7"/>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bd" Property="Background" Value="#FFFCFCFC"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="Menu">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="4"/>
  </Style>

  <Style TargetType="MenuItem">
    <Setter Property="Padding" Value="10,4"/>
    <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="MenuItem">
          <Grid>
            <Border x:Name="Bg" Background="Transparent"/>
            <DockPanel>
              <ContentPresenter Margin="6,2"/>
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
              <Setter TargetName="Bg" Property="Background" Value="#11000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.55"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="StatusBar">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="6,4"/>
  </Style>

  <!-- ========== Lists / DataGrid ========== -->
  <Style TargetType="ListView">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>

  <Style TargetType="GridViewColumnHeader">
    <Setter Property="Background" Value="#FFF7F7F7"/>
    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Padding" Value="8,4"/>
  </Style>

  <Style TargetType="DataGrid">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="RowBackground" Value="#FFFFFF"/>
    <Setter Property="AlternatingRowBackground" Value="#FFFAFAFA"/>
    <Setter Property="HorizontalGridLinesBrush" Value="#FFEAEAEA"/>
    <Setter Property="VerticalGridLinesBrush" Value="#FFEAEAEA"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
  </Style>

  <Style TargetType="DataGridColumnHeader">
    <Setter Property="Background" Value="#FFF7F7F7"/>
    <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Padding" Value="8,4"/>
  </Style>

  <!-- ========== ToolTip ==========
  Compact, neutral tooltip matching the classic palette -->
  <Style TargetType="ToolTip">
    <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="8"/>
  </Style>

  <!-- Hyperlink -->
  <Style TargetType="Hyperlink">
    <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
    <Setter Property="TextDecorations" Value="None"/>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="TextDecorations" Value="Underline"/>
      </Trigger>
    </Style.Triggers>
  </Style>

</ResourceDictionary>
